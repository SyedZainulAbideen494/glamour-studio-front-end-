{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\event-org-front-end\\\\src\\\\create-event\\\\create-event-page.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\nimport './createevent.css';\nimport { API_ROUTES } from '../app modules/apiRoutes';\nimport dashboardImg from '../images/dashboard.png';\nimport createEventImg from '../images/create-event.png';\nimport myeventsImg from '../images/myEvents.png';\nimport registrationsImg from '../images/registrations.png';\nimport joinedEventImg from '../images/joinedEvents.png';\nimport settingsImg from '../images/settings.png';\nimport premiumIcon from '../images/premium.png';\nimport Navbar from '../componenets/Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateEventPage = () => {\n  _s();\n  const [user, setUser] = useState({});\n  const [showModal, setShowModal] = useState(false);\n  const navigate = useNavigate();\n  const [activeLink, setActiveLink] = useState('/');\n  const pathActive = useLocation();\n  // Function to handle navigation and update active link\n  useEffect(() => {\n    setActiveLink(pathActive.pathname);\n  }, [pathActive.pathname]);\n\n  // Function to handle navigation and update active link\n  const handleNavigation = path => {\n    navigate(path);\n    setActiveLink(path);\n  };\n  const nav = useNavigate();\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    fetch(API_ROUTES.fetchUserDetails, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        token\n      })\n    }).then(response => response.json()).then(data => {\n      setUser(data);\n    }).catch(error => console.error('Error fetching user data:', error));\n  }, []);\n  const handleModalClose = () => {\n    setShowModal(false);\n  };\n  const handleSubscribe = () => {\n    // Handle subscription logic here\n    console.log('Redirecting to subscription page...');\n    setShowModal(false); // Close modal after redirect\n    nav('/premium');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"homepage-container\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      activeLink: activeLink,\n      handleNavigation: handleNavigation,\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 1\n    }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"close\",\n          onClick: handleModalClose,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: premiumIcon,\n          alt: \"Premium Icon\",\n          className: \"premium-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"modal-text\",\n          style: {\n            color: '#fff'\n          },\n          children: \"You need a premium subscription to create events.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSubscribe,\n            style: {\n              backgroundColor: '#007bff'\n            },\n            children: \"Subscribe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleModalClose,\n            style: {\n              backgroundColor: '#007bff'\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 1\n  }, this);\n};\n_s(CreateEventPage, \"gnOi1MgUFFdLeODCOauzUN8XaDs=\", false, function () {\n  return [useNavigate, useLocation, useNavigate];\n});\n_c = CreateEventPage;\nexport default CreateEventPage;\nvar _c;\n$RefreshReg$(_c, \"CreateEventPage\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","useLocation","API_ROUTES","dashboardImg","createEventImg","myeventsImg","registrationsImg","joinedEventImg","settingsImg","premiumIcon","Navbar","jsxDEV","_jsxDEV","CreateEventPage","_s","user","setUser","showModal","setShowModal","navigate","activeLink","setActiveLink","pathActive","pathname","handleNavigation","path","nav","token","localStorage","getItem","fetch","fetchUserDetails","method","headers","body","JSON","stringify","then","response","json","data","catch","error","console","handleModalClose","handleSubscribe","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","style","color","backgroundColor","_c","$RefreshReg$"],"sources":["C:/Users/ADMIN/Desktop/event-org-front-end/src/create-event/create-event-page.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\r\nimport './createevent.css';\r\nimport { API_ROUTES } from '../app modules/apiRoutes';\r\nimport dashboardImg from '../images/dashboard.png';\r\nimport createEventImg from '../images/create-event.png';\r\nimport myeventsImg from '../images/myEvents.png';\r\nimport registrationsImg from '../images/registrations.png';\r\nimport joinedEventImg from '../images/joinedEvents.png';\r\nimport settingsImg from '../images/settings.png';\r\nimport premiumIcon from '../images/premium.png';\r\nimport Navbar from '../componenets/Navbar';\r\n\r\nconst CreateEventPage = () => {\r\n  const [user, setUser] = useState({});\r\n  const [showModal, setShowModal] = useState(false);\r\n  const navigate = useNavigate();\r\n  const [activeLink, setActiveLink] = useState('/');\r\n  const pathActive = useLocation();\r\n  // Function to handle navigation and update active link\r\n  useEffect(() => {\r\n    setActiveLink(pathActive.pathname);\r\n  }, [pathActive.pathname]);\r\n\r\n  // Function to handle navigation and update active link\r\n  const handleNavigation = (path) => {\r\n    navigate(path);\r\n    setActiveLink(path);\r\n  };\r\n\r\n  const nav = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    fetch(API_ROUTES.fetchUserDetails, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ token }),\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setUser(data);\r\n      })\r\n      .catch(error => console.error('Error fetching user data:', error));\r\n  }, []);\r\n\r\n\r\n\r\n  const handleModalClose = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  const handleSubscribe = () => {\r\n    // Handle subscription logic here\r\n    console.log('Redirecting to subscription page...');\r\n    setShowModal(false); // Close modal after redirect\r\n    nav('/premium')\r\n  };\r\n\r\n  return (\r\n<div className=\"homepage-container\">\r\n<Navbar activeLink={activeLink} handleNavigation={handleNavigation} user={user} />\r\n\r\n  {showModal && (\r\n    <div className=\"modal\">\r\n      <div className=\"modal-content\">\r\n        <span className=\"close\" onClick={handleModalClose}>&times;</span>\r\n        <img src={premiumIcon} alt=\"Premium Icon\" className=\"premium-icon\" />\r\n        <p className=\"modal-text\" style={{ color: '#fff' }}>You need a premium subscription to create events.</p>\r\n        <div className=\"modal-buttons\">\r\n          <button onClick={handleSubscribe} style={{ backgroundColor: '#007bff' }}>Subscribe</button>\r\n          <button onClick={handleModalClose} style={{ backgroundColor: '#007bff' }}>Cancel</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )}\r\n</div>\r\n  );\r\n};\r\n\r\nexport default CreateEventPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}